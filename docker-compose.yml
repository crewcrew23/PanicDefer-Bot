services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: healthcheck
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: secret
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit disk_free_limit 2147483648
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  migrator:
    build:
      context: ./
      dockerfile: ./cmd/migrator/Dockerfile
    environment:
      DB_URL: "postgres://postgres:postgres@postgres:5432/healthcheck"
      CONFIG_PATH: ${CONFIG_PATH}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: "no"

  server:
    build:
      context: ./
      dockerfile: ./cmd/server/Dockerfile
    environment:
      CONFIG_PATH: ${CONFIG_PATH}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    restart: unless-stopped

  handler:
    build:
      context: ./
      dockerfile: ./cmd/workerHandler/Dockerfile
    environment:
      CONFIG_PATH: ${CONFIG_PATH}
    volumes:
      - db_data:/data
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
      server:
        condition: service_started
    restart: unless-stopped

  worker:
    build:
      context: ./
      dockerfile: ./cmd/workerHealthzChecker/Dockerfile
    environment:
      CONFIG_PATH: ${CONFIG_PATH}
    volumes:
      - db_data:/data
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
      server:
        condition: service_started
      handler:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq:
  db_data: